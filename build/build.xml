<?xml version="1.0" encoding="utf-8"?>
<!--
  This file is part of the Agavi package.
  Copyright (c) 2005-2008 the Agavi Project.
  Based on the Mojavi3 MVC Framework, Copyright (c) 2003-2005 Sean Kerr.

  For the full copyright and license information, please view the LICENSE file
  that was distributed with this source code. You can also view the LICENSE
  file online at http://www.agavi.org/LICENSE.txt
    vi: set noexpandtab:
    Local Variables:
    indent-tabs-mode: t
    End:
  -->

<!--
  $Id$
  -->
<project name="Agavi" basedir="." default="status">

	<!-- Agavi core directories -->
	<property name="agavi.directory" value="@PEAR_DIR@/agavi" />

	<property name="agavi.directory.src" value="${agavi.directory}/src" />
	<property name="agavi.directory.src.action" value="${agavi.directory.src}/action" />
	<property name="agavi.directory.src.config" value="${agavi.directory.src}/config" />
	<property name="agavi.directory.src.controller" value="${agavi.directory.src}/controller" />
	<property name="agavi.directory.src.core" value="${agavi.directory.src}/core" />
	<property name="agavi.directory.src.database" value="${agavi.directory.src}/database" />
	<property name="agavi.directory.src.date" value="${agavi.directory.src}/date" />
	<property name="agavi.directory.src.exception" value="${agavi.directory.src}/exception" />
	<property name="agavi.directory.src.filter" value="${agavi.directory.src}/filter" />
	<property name="agavi.directory.src.logging" value="${agavi.directory.src}/logging" />
	<property name="agavi.directory.src.model" value="${agavi.directory.src}/model" />
	<property name="agavi.directory.src.renderer" value="${agavi.directory.src}/renderer" />
	<property name="agavi.directory.src.request" value="${agavi.directory.src}/request" />
	<property name="agavi.directory.src.response" value="${agavi.directory.src}/response" />
	<property name="agavi.directory.src.routing" value="${agavi.directory.src}/routing" />
	<property name="agavi.directory.src.storage" value="${agavi.directory.src}/storage" />
	<property name="agavi.directory.src.testing" value="${agavi.directory.src}/testing" />
	<property name="agavi.directory.src.translation" value="${agavi.directory.src}/translation" />
	<property name="agavi.directory.src.user" value="${agavi.directory.src}/user" />
	<property name="agavi.directory.src.util" value="${agavi.directory.src}/util" />
	<property name="agavi.directory.src.validator" value="${agavi.directory.src}/validator" />
	<property name="agavi.directory.src.vendor" value="${agavi.directory.src}/vender" />
	<property name="agavi.directory.src.view" value="${agavi.directory.src}/view" />

	<property name="agavi.directory.etc" value="${agavi.directory}/etc" />

	<property name="agavi.directory.build" value="${agavi.directory}/build" />
	<property name="agavi.directory.build.templates" value="${agavi.directory.build}/templates" />
	<property name="agavi.directory.build.tasks" value="${agavi.directory.build}/tasks" />

	<property name="agavi.directory.test" value="${agavi.directory}/test" />

	<property name="agavi.directory.docs" value="${agavi.directory}/docs" />

	<!-- Project directories -->
	<property name="project.directory.app" value="app" />
	<property name="project.directory.app.config" value="${project.directory.app}/config" />
	<property name="project.directory.app.modules" value="${project.directory.app}/modules" />
	<property name="project.directory.app.cache" value="${project.directory.app}/cache" />
	<property name="project.directory.app.lib" value="${project.directory.app}/lib" />
	<property name="project.directory.app.templates" value="${project.directory.app}/templates" />

	<property name="project.directory.pub" value="pub" />

	<!-- Module directories -->
	<property name="module.directory.actions" value="actions" />
	<property name="module.directory.cache" value="cache" />
	<property name="module.directory.config" value="config" />
	<property name="module.directory.lib" value="lib" />
	<property name="module.directory.models" value="models" />
	<property name="module.directory.templates" value="templates" />
	<property name="module.directory.validate" value="validate" />
	<property name="module.directory.views" value="views" />

	<!-- Version control properties -->
	<property name="versioning" value="filesystem" />

	<!-- Load tasks relative to the build system. -->
	<taskdef name="agavi.input" classname="AgaviInputTask" classpath="tasks" />
	<taskdef name="agavi.transform-path" classname="AgaviTransformpathTask" classpath="tasks" />
	<taskdef name="agavi.locate-project" classname="AgaviLocateprojectTask" classpath="tasks" />
	<taskdef name="agavi.validate-project" classname="AgaviValidateprojectTask" classpath="tasks" />
	<!--<taskdef name="agavi.transform-string-to-identifier" classname="AgaviTransformstringtoidentifierTask" classpath="tasks" />-->

	<!-- Environment-specific configuration -->

	<!-- Targets -->
	<target name="initialize">
		<tstamp />

		<!-- Load user-defined build configuration. -->
		<if>
			<isset property="file.build-properties" />
			<then>
				<agavi.transform-path property="file.build-properties" base="${application.startdir}" path="${file.build-properties}" />
				<property file="${file.build-properties}" />
			</then>
		</if>

		<!-- Ensure we can reach the Agavi directory. -->
		<available property="agavi.available" file="${agavi.directory.src}/agavi.php" type="file" />
		<fail unless="agavi.available" message="Agavi installation not found in ${agavi.directory}" />

		<!-- Agavi was found; load Agavi-specific tasks. -->
		<taskdef name="agavi.read-configuration" classname="AgaviReadconfigurationTask" classpath="tasks" />

		<!-- Load some basic configuration values. -->
		<agavi.read-configuration property="agavi.version" configurationValue="agavi.version" />
		<agavi.read-configuration property="agavi.url" configurationValue="agavi.url" />
	</target>

	<target name="locate-project" depends="initialize">
		<agavi.locate-project property="project.directory" path="${application.startdir}" ignoreIfSet="true" />
		<agavi.input property="project.directory" message="Project base directory" default="${application.startdir}" promptCharacter=":" failIfEmpty="true" ignoreIfSet="true" />
		<agavi.transform-path property="project.directory" base="${application.startdir}" path="${project.directory}" />

		<agavi.validate-project property="project.available" path="${project.directory}" />
		<fail unless="project.available" message="Agavi project not found in ${project.directory}" />
		
		<!-- Load project-specific build configuration. -->
		<property name="project.file.build-properties" value="${project.directory}/build.properties" />
		<property file="${project.file.build-properties}" />
	</target>

	<target name="locate-module" depends="initialize,locate-project">
	</target>

	<target name="status" depends="initialize" description="Displays information about the current environment">
		<!-- Phing status -->
		<echo message="PHP:" />
		<echo message="  Version: ${php.version}" />
		<echo message="  Include path: ${php.classpath}" />
		<echo message="" />

		<echo message="Phing:" />
		<echo message="  Version: ${phing.version}" />
		<echo message="" />

		<echo message="Agavi:" />
		<echo message="  Installation directory: ${agavi.directory}" />
		<echo message="  Version: ${agavi.version}" />
		<echo message="  URL: ${agavi.url}" />
		<echo message="" />

		<echo message="Project:" />
		<agavi.locate-project property="project.directory" path="${application.startdir}" ignoreIfSet="true" quiet="true" />
		<agavi.validate-project property="project.available" path="${project.directory}" />
		<if>
			<isset property="project.available" />
			<then>
				<echo message="  Base directory: ${project.directory}" />
			</then>
			<else>
				<echo message="  (not found)" />
			</else>
		</if>
		<echo message="" />

		<echo message="For a list of possible build targets, call this script with the -l argument." />
	</target>

	<target name="project" depends="initialize" description="Creates a project">
		<agavi.input property="project.directory" message="Project base directory" default="${application.startdir}" promptCharacter=":" failIfEmpty="true" ignoreIfSet="true" />
		<agavi.transform-path property="project.directory" base="${application.startdir}" path="${project.directory}" />

		<!-- Create directory structure. -->
		<mkdir dir="${project.directory}" />
		<mkdir dir="${project.directory}/${project.directory.app}" />
		<mkdir dir="${project.directory}/${project.directory.app.config}" />
		<mkdir dir="${project.directory}/${project.directory.app.modules}" />
		<mkdir dir="${project.directory}/${project.directory.app.cache}" />
		<mkdir dir="${project.directory}/${project.directory.app.lib}" />
		<mkdir dir="${project.directory}/${project.directory.app.templates}" />
		<mkdir dir="${project.directory}/${project.directory.pub}" />

		<chmod file="${project.directory}/${project.directory.app.cache}" mode="0777" />

		<!-- Create base action. -->
		<!--
		<agavi.input property="project.file.app.lib.action.base-action.name" message="Project base action name" default="ProjectBaseAction" promptCharacter=":" failIfEmpty="true" ignoreIfSet="true" />
		<agavi.transform-string-to-identifier property="project.file.app.lib.action.base-action.name.transformed" string="${project.file.app.lib.action.base-action.name}" />
		<echo message="${project.file.app.lib.action.base-action.name.transformed}" />
		-->

		<!-- Create base view. -->
		<!--
		<agavi.input property="project.file.app.lib.view.base-view.name" message="Project base view name" default="ProjectBaseView" promptCharacter=":" failIfEmpty="true" ignoreIfSet="true" />
		<agavi.transform-string-to-identifier property="project.file.app.lib.view.base-view.name.transformed" string="${project.file.app.lib.view.base-view.name}" />
		<echo message="${project.file.app.lib.view.base-view.name.transformed}" />
		-->
	</target>

	<target name="module-create" depends="initialize,locate-project" description="Creates a module">
		<agavi.input property="module.name" message="Module name" promptCharacter=":" failIfEmpty="true" ignoreIfSet="true" />

		<property name="module.directory" value="${project.directory}/${project.directory.app.modules}/${module.name}" />

		<mkdir dir="${module.directory}/${module.directory.actions}" />
		<mkdir dir="${module.directory}/${module.directory.cache}" />
		<mkdir dir="${module.directory}/${module.directory.config}" />
		<mkdir dir="${module.directory}/${module.directory.lib}" />
		<mkdir dir="${module.directory}/${module.directory.models}" />
		<mkdir dir="${module.directory}/${module.directory.templates}" />
		<mkdir dir="${module.directory}/${module.directory.validate}" />
		<mkdir dir="${module.directory}/${module.directory.views}" />

		<chmod file="${module.directory}/${module.directory.cache}" mode="0777" />
	</target>

	<target name="module-rename" depends="initialize,locate-project" description="Renames a module">
	</target>

	<target name="module-remove" depends="initialize,locate-project" description="Removes a module">
	</target>

	<target name="action-create" depends="initialize,locate-project,locate-module" description="Creates an action">
	</target>

	<target name="action-rename" depends="initialize,locate-project,locate-module" description="Renames an action">
	</target>

	<target name="action-remove" depends="initialize,locate-project,locate-module" description="Removes an action">
	</target>

	<target name="view-create" depends="initialize,locate-project,locate-module" description="Creates a view">
	</target>

	<target name="view-rename" depends="initialize,locate-project,locate-module" description="Renames a view">
	</target>

	<target name="view-remove" depends="initialize,locate-project,locate-module" description="Removes a view">
	</target>

	<target name="model-create" depends="initialize,locate-project,locate-module" description="Creates a model">
	</target>

	<target name="model-rename" depends="initialize,locate-project,locate-module" description="Renames a model">
	</target>

	<target name="model-remove" depends="initialize,locate-project,locate-module" description="Removes a model">
	</target>

	<target name="template-create" depends="initialize,locate-project,locate-module" description="Creates a template">
	</target>

	<target name="template-rename" depends="initialize,locate-project,locate-module" description="Renames a template">
	</target>

	<target name="template-remove" depends="initialize,locate-project,locate-module" description="Removes a template">
	</target>

	<!-- define the location of our tasks -->
	<!--<taskdef classname="phing.AgaviFixPathsTask" classpath="${agavi.dir}" name="fixpaths"/>
	<taskdef classname="phing.AgaviListModulesTask" classpath="${agavi.dir}" name="listModules"/>
	<taskdef classname="phing.AgaviListActionsTask" classpath="${agavi.dir}" name="listActions"/>
	<taskdef classname="phing.AgaviSubActionNameTask" classpath="${agavi.dir}" name="subActionName"/>
	<taskdef classname="phing.AgaviInfoTask" classpath="${agavi.dir}" name="agaviInfo"/>

	<property name="app.dir" value=""/>
	<property name="app.dirname" value="app" override="false"/>-->
	<!-- <property name="tests.dir" value=""/> -->
	<!-- <property name="tests2.dir" value="${agavi.dir}/../tests2/"/> -->

	<property name="templates.dir.default" value="buildtools/code_templates" />

	<property name="template.extension" value=".php" override="false" />

	<!-- fileset for -dist files -->
	<fileset dir="." id="distfiles">
		<include name="**/*-dist"/>
	</fileset>

	<!-- Project creation -->
	<target name="old.project" description="create a new project">
		<input propertyname="project.dir" promptChar="?" message="Full path to your new project (no trailing slash!)"/>
		<mkdir dir="${project.dir}"/>
		<fixpaths base="${project.dir}" new="true" appdir="${app.dirname}"/>
		<!-- <echo msg="project dir: ${project.dir}, app dir: ${app.dir}, tests dir: ${tests.dir}"/> -->
		<echo msg="project dir: ${project.dir}, app dir: ${app.dir}"/>
		<mkdir dir="${project.dir}"/>
		<mkdir dir="${app.dir}"/>
		<mkdir dir="${project.dir}/pub"/>
		<property name="templates.dir.current" value="${templates.dir.default}" override="true" />
		<available file="${templates.dir}/index.php.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/index.php.tmpl" tofile="${project.dir}/pub/index.php">
			<filterchain>
				<replacetokens begintoken="%%" endtoken="%%">
					<token key="PATH_TO_AGAVI" value="${agavi.dir}"/> <!-- was project.basedir -->
					<token key="PATH_TO_PROJECT" value="${app.dir}"/>
				</replacetokens>
			</filterchain>
		</copy>
		<available file="${templates.dir}/dist.htaccess.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/dist.htaccess.tmpl" tofile="${project.dir}/pub/dist.htaccess" />
		<mkdir dir="${project.dir}/pub/modpub"/>
		<mkdir dir="${app.dir}/cache"/>
		<chmod file="${app.dir}/cache" mode="777"/>
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true"  />
		<available file="${templates.dir}/config.php.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/config.php.tmpl" tofile="${app.dir}/config.php">
			<filterchain>
				<replacetokens begintoken="%%" endtoken="%%">
					<token key="PATH_TO_AGAVI" value="${agavi.dir}"/>
					<token key="PATH_TO_PROJECT" value="${app.dir}"/>
				</replacetokens>
			</filterchain>
		</copy>
		<mkdir dir="${app.dir}/config"/>
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true"  />
		<available file="${templates.dir}/config" property="templates.dir.current" value="${templates.dir}" />
		<copy todir="${app.dir}/config">
			<fileset dir="${templates.dir.current}/config">
				<include name="*.xml"/>
			</fileset>
		</copy>
		<mkdir dir="${app.dir}/lib"/>
		<mkdir dir="${app.dir}/models"/>
		<mkdir dir="${app.dir}/modules"/>
		<mkdir dir="${app.dir}/templates"/>

		<mkdir dir="${app.dir}/lib/action"/>
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true"  />
		<available file="${templates.dir}/defaults/base/ProjectBaseAction.class.php.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/defaults/base/ProjectBaseAction.class.php.tmpl" tofile="${app.dir}/lib/action/ProjectBaseAction.class.php" />

		<mkdir dir="${app.dir}/lib/model"/>
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true"  />
		<available file="${templates.dir}/defaults/base/ProjectBaseModel.class.php.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/defaults/base/ProjectBaseModel.class.php.tmpl" tofile="${app.dir}/lib/model/ProjectBaseModel.class.php" />

		<mkdir dir="${app.dir}/lib/view"/>
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true"  />
		<available file="${templates.dir}/defaults/base/ProjectBaseView.class.php.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/defaults/base/ProjectBaseView.class.php.tmpl" tofile="${app.dir}/lib/view/ProjectBaseView.class.php" />

		<!-- <phingcall target="projecttests" /> -->

		<input propertyname="modules" promptChar="?" defaultValue="Default" message="Modules for your project (no whitespace, comma seperated)"/>
		<foreach list="${modules}" param="module" target="buildmodule"/>

		<phingcall target="defaultactions" />
	</target>

	<!-- create tests directory structure which mimics the app structure -->
	<!-- <target name="projecttests" description="create tests structure for project"> -->
	<!-- 	<fixpaths base="${project.dir}" appdir="${app.dirname}" /> -->
	<!-- 	<mkdir dir="${tests.dir}" /> -->
	<!-- 	<mkdir dir="${tests.dir}/lib" /> -->
	<!-- 	<mkdir dir="${tests.dir}/lib/models" /> -->
	<!-- 	<mkdir dir="${tests.dir}/modules" /> -->
	<!-- 	<copy file="buildtools/test_setup.php" tofile="${tests.dir}/test_setup.php" overwrite="true"/> -->
	<!-- </target> -->

	<!-- Module creation -->
	<!-- create a new module in an existing project -->
	<target name="old.module" description="create a new module in an existing project.">
		<fixpaths base="${project.dir}" appdir="${app.dirname}"/>
		<available file="${app.dir}/modules" type="dir" property="is_app" value="true"/>
		<fail unless="is_app" message="Must be called in the root of an app directory. (${app.dir})"/>
		<input propertyname="module" promptChar="?" message="Module Name"/>
		<phingcall target="buildmodule"/>
	</target>

	<target name="old.buildmodule">
		<property name="module.dir" value="${app.dir}/modules/${module}"/>
		<mkdir dir="${module.dir}"/>
		<mkdir dir="${module.dir}/actions"/>
		<mkdir dir="${module.dir}/config"/>
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true" />
		<available file="${templates.dir}/module.xml.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/module.xml.tmpl" tofile="${module.dir}/config/module.xml">
			<filterchain>
				<replacetokens begintoken="%%" endtoken="%%">
					<token key="MODULE" value="${module}"/>
				</replacetokens>
			</filterchain>
		</copy>
		<mkdir dir="${module.dir}/models"/>
		<mkdir dir="${module.dir}/templates"/>
		<mkdir dir="${module.dir}/views"/>

		<!-- <phingcall target="buildmoduletests"> -->
		<!-- 	<property name="module" value="${module}"/> -->
		<!-- </phingcall> -->

		<input propertyname="actions" promptChar="?" defaultValue="Index" message="Actions for ${module} (no whitespace, comma seperated)"/>
		<foreach list="${actions}" param="action" target="buildaction"/>
		<input propertyname="models" promptChar="?" message="Models for ${module} (no whitespace, comma seperated)"/>
		<foreach list="${models}" param="model" target="buildmodel"/>
	</target>

	<!-- <target name="buildmoduletests"> -->
	<!-- 	<fixpaths base="${project.dir}" appdir="${app.dirname}"/> -->
	<!-- 	<property name="moduletests.dir" value="${tests.dir}/modules/${module}"/> -->
	<!-- 	<mkdir dir="${moduletests.dir}"/> -->
	<!-- 	<available file="${moduletests.dir}" type="dir" property="has_tests" value="true"/> -->
	<!-- 	<fail unless="has_tests" message="Project's tests directory not found."/> -->
	<!--  -->
	<!-- 	<mkdir dir="${moduletests.dir}/actions"/> -->
	<!-- 	<mkdir dir="${moduletests.dir}/models"/> -->
	<!-- 	<mkdir dir="${moduletests.dir}/views"/> -->
	<!-- </target> -->

	<!-- Action creation -->
	<target name="old.action" description="create a new action">
		<fixpaths base="${project.dir}" defaultmodule="true" appdir="${app.dirname}"/>
		<!--
		<available file="${module.dir}/config/module.xml" property="is_module" value="true"/>
		<fail unless="is_module" message="Must be called in the root of a module directory."/>
		-->
		<listModules app="${app.dir}" property="current.modules"/>

		<input propertyname="module" promptChar="?" validArgs="${current.modules}" defaultValue="${default.module}" message="Make the action for which module? "/>
		<input propertyname="action" promptChar="?" defaultValue="Index" message="Action Name"/>
		<phingcall target="buildaction">
			<property name="module.dir" value="${app.dir}/modules/${module}"/>
			<!-- <property name="moduletests.dir" value="${tests.dir}/modules/${module}"/> -->
		</phingcall>
	</target>

	<!-- Default actions -->
	<target name="old.defaultactions" description="create a default action">
		<fixpaths base="${project.dir}" appdir="${app.dirname}" />

		<!-- DEFAULT -->
		<listModules app="${app.dir}" property="current.modules" defaultProperty="default.module"/>
		<input propertyname="module.default" promptChar="?" validArgs="${current.modules}" defaultValue="${default.module}" message="Module of Default Action? "/>
		<listActions moduleDir="${app.dir}/modules/${module.default}" property="current.actions" defaultProperty="default.action" />
		<input propertyname="action.default" promptChar="?" validArgs="${current.actions}" defaultValue="${default.action}" message="Name of Default Action? "/>


		<!-- WELCOME action-->
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true" />
		<available file="${templates.dir}/defaults/actions/WelcomeToAgaviAction.class.php.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/defaults/actions/WelcomeToAgaviAction.class.php.tmpl" tofile="${app.dir}/modules/${module.default}/actions/WelcomeToAgaviAction.class.php" overwrite="false">
			<filterchain>
				<replacetokens begintoken="%%" endtoken="%%">
					<token key="MODULE" value="${module.default}"/>
					<token key="ACTION_NAME" value="WelcomeToAgavi"/>
				</replacetokens>
			</filterchain>
		</copy>

		<!-- WELCOME view-->
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true" />
		<available file="${templates.dir}/defaults/views/WelcomeToAgaviSuccessView.class.php.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/defaults/views/WelcomeToAgaviSuccessView.class.php.tmpl" tofile="${app.dir}/modules/${module.default}/views/WelcomeToAgaviSuccessView.class.php" overwrite="false">
			<filterchain>
				<replacetokens begintoken="%%" endtoken="%%">
					<token key="MODULE" value="${module.default}"/>
					<token key="ACTION_NAME" value="WelcomeToAgavi"/>
					<token key="ACTION_PATH" value="WelcomeToAgavi"/>
				</replacetokens>
			</filterchain>
		</copy>

		<!-- WELCOME template -->
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true" />
		<available file="${templates.dir}/defaults/templates/WelcomeToAgaviSuccess${template.extension}.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/defaults/templates/WelcomeToAgaviSuccess${template.extension}.tmpl" tofile="${app.dir}/modules/${module.default}/templates/WelcomeToAgaviSuccess${template.extension}" overwrite="false" />

		<!-- WELCOME images -->
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true" />
		<available file="${templates.dir}/defaults/data/plant.png" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/defaults/data/plant.png" tofile="${project.dir}/pub/plant.png" />
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true" />
		<available file="${templates.dir}/defaults/data/bg.png" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/defaults/data/bg.png" tofile="${project.dir}/pub/bg.png" />


<!-- 404 -->
		<listModules app="${app.dir}" property="current.modules" defaultProperty="default.module"/>
		<input propertyname="module.404" promptChar="?" validArgs="${current.modules}" defaultValue="${default.module}" message="404 error module? "/>
		<listActions moduleDir="${app.dir}/modules/${module.404}" property="current.actions" defaultProperty="default.action" />
		<input propertyname="action.404" promptChar="?" defaultValue="Error404" message="404 error action (use an existing or create a new)? (${current.actions})"/>

		<subActionName property="action.404" outputPropertyPrefix="404."/>

		<!-- 404 action-->
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true" />
		<available file="${templates.dir}/defaults/actions/Error404Action.class.php.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/defaults/actions/Error404Action.class.php.tmpl" tofile="${app.dir}/modules/${module.404}/actions/${404.actionPath}Action.class.php" overwrite="false">
			<filterchain>
				<replacetokens begintoken="%%" endtoken="%%">
					<token key="MODULE" value="${module.404}"/>
					<token key="ACTION_NAME" value="${404.actionName}"/>
				</replacetokens>
			</filterchain>
		</copy>

		<!-- 404 view-->
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true" />
		<available file="${templates.dir}/defaults/views/Error404SuccessView.class.php.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/defaults/views/Error404SuccessView.class.php.tmpl" tofile="${app.dir}/modules/${module.404}/views/${404.actionPath}SuccessView.class.php" overwrite="false">
			<filterchain>
				<replacetokens begintoken="%%" endtoken="%%">
					<token key="MODULE" value="${module.404}"/>
					<token key="ACTION_NAME" value="${404.actionName}"/>
					<token key="ACTION_PATH" value="${404.actionPath}"/>
				</replacetokens>
			</filterchain>
		</copy>

		<!-- 404 template -->
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true" />
		<available file="${templates.dir}/defaults/templates/Error404Success${template.extension}.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/defaults/templates/Error404Success${template.extension}.tmpl" tofile="${app.dir}/modules/${module.404}/templates/${404.actionPath}Success${template.extension}" overwrite="false" />

<!-- Login -->
		<listModules app="${app.dir}" property="current.modules" defaultProperty="default.module"/>
		<input propertyname="module.login" promptChar="?" validArgs="${current.modules}" defaultValue="${default.module}" message="Login module? "/>
		<listActions moduleDir="${app.dir}/modules/${module.login}" property="current.actions" defaultProperty="default.action" />
		<input propertyname="action.login" promptChar="?" defaultValue="Login" message="Login action (use an existing or create a new)? (${current.actions})"/>

		<subActionName property="action.login" outputPropertyPrefix="login."/>

		<!-- Login action-->
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true" />
		<available file="${templates.dir}/defaults/actions/LoginAction.class.php.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/defaults/actions/LoginAction.class.php.tmpl" tofile="${app.dir}/modules/${module.login}/actions/${login.actionPath}Action.class.php" overwrite="false">
			<filterchain>
				<replacetokens begintoken="%%" endtoken="%%">
					<token key="MODULE" value="${module.login}"/>
					<token key="ACTION_NAME" value="${login.actionName}"/>
				</replacetokens>
			</filterchain>
		</copy>

<!-- Secure -->
		<listModules app="${app.dir}" property="current.modules" defaultProperty="default.module"/>
		<input propertyname="module.secure" promptChar="?" validArgs="${current.modules}" defaultValue="${default.module}" message="Secure module? "/>
		<listActions moduleDir="${app.dir}/modules/${module.secure}" property="current.actions" defaultProperty="default.action" />
		<input propertyname="action.secure" promptChar="?" defaultValue="Secure" message="Secure action (use an existing or create a new)? (${current.actions})"/>

		<subActionName property="action.secure" outputPropertyPrefix="secure."/>

		<!-- Secure action-->
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true" />
		<available file="${templates.dir}/defaults/actions/SecureAction.class.php.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/defaults/actions/SecureAction.class.php.tmpl" tofile="${app.dir}/modules/${module.secure}/actions/${secure.actionPath}Action.class.php" overwrite="false">
			<filterchain>
				<replacetokens begintoken="%%" endtoken="%%">
					<token key="MODULE" value="${module.secure}"/>
					<token key="ACTION_NAME" value="${secure.actionName}"/>
				</replacetokens>
			</filterchain>
		</copy>

		<!-- Secure view-->
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true" />
		<available file="${templates.dir}/defaults/views/SecureSuccessView.class.php.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/defaults/views/SecureSuccessView.class.php.tmpl" tofile="${app.dir}/modules/${module.secure}/views/${secure.actionPath}SuccessView.class.php" overwrite="false">
			<filterchain>
				<replacetokens begintoken="%%" endtoken="%%">
					<token key="MODULE" value="${module.secure}"/>
					<token key="ACTION_NAME" value="${secure.actionName}"/>
					<token key="ACTION_PATH" value="${secure.actionPath}"/>
				</replacetokens>
			</filterchain>
		</copy>

		<!-- Secure template -->
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true" />
		<available file="${templates.dir}/defaults/templates/SecureSuccess${template.extension}.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/defaults/templates/SecureSuccess${template.extension}.tmpl" tofile="${app.dir}/modules/${module.secure}/templates/${secure.actionPath}Success${template.extension}" overwrite="false" />

<!-- Disabled -->
		<listModules app="${app.dir}" property="current.modules" defaultProperty="default.module"/>
		<input propertyname="module.disabled" promptChar="?" validArgs="${current.modules}" defaultValue="${default.module}" message="Module Disabled module? "/>
		<listActions moduleDir="${app.dir}/modules/${module.disabled}" property="current.actions" defaultProperty="default.action" />
		<input propertyname="action.disabled" promptChar="?" defaultValue="ModuleDisabled" message="Module Disabled action (use an existing or create a new)? (${current.actions})"/>

		<subActionName property="action.disabled" outputPropertyPrefix="disabled."/>

		<!-- Disabled action-->
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true" />
		<available file="${templates.dir}/defaults/actions/ModuleDisabledAction.class.php.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/defaults/actions/ModuleDisabledAction.class.php.tmpl" tofile="${app.dir}/modules/${module.disabled}/actions/${disabled.actionPath}Action.class.php" overwrite="false">
			<filterchain>
				<replacetokens begintoken="%%" endtoken="%%">
					<token key="MODULE" value="${module.disabled}"/>
					<token key="ACTION_NAME" value="${disabled.actionName}"/>
				</replacetokens>
			</filterchain>
		</copy>

		<!-- Disabled view-->
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true" />
		<available file="${templates.dir}/defaults/views/ModuleDisabledSuccessView.class.php.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/defaults/views/ModuleDisabledSuccessView.class.php.tmpl" tofile="${app.dir}/modules/${module.disabled}/views/${disabled.actionPath}SuccessView.class.php" overwrite="false">
			<filterchain>
				<replacetokens begintoken="%%" endtoken="%%">
					<token key="MODULE" value="${module.disabled}"/>
					<token key="ACTION_NAME" value="${disabled.actionName}"/>
					<token key="ACTION_PATH" value="${disabled.actionPath}"/>
				</replacetokens>
			</filterchain>
		</copy>

		<!-- Disabled template -->
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true" />
		<available file="${templates.dir}/defaults/templates/ModuleDisabledSuccess${template.extension}.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/defaults/templates/ModuleDisabledSuccess${template.extension}.tmpl" tofile="${app.dir}/modules/${module.disabled}/templates/${disabled.actionPath}Success${template.extension}" overwrite="false" />

<!-- Unavailable -->
		<listModules app="${app.dir}" property="current.modules" defaultProperty="default.module"/>
		<input propertyname="module.unavailable" promptChar="?" validArgs="${current.modules}" defaultValue="${default.module}" message="Unavailable module? "/>
		<listActions moduleDir="${app.dir}/modules/${module.unavailable}" property="current.actions" defaultProperty="default.action" />
		<input propertyname="action.unavailable" promptChar="?" defaultValue="Unavailable" message="Unavailable action (use an existing or create a new)? (${current.actions})"/>

		<subActionName property="action.unavailable" outputPropertyPrefix="unavailable."/>

		<!-- Unavailable action-->
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true" />
		<available file="${templates.dir}/defaults/actions/UnavailableAction.class.php.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/defaults/actions/UnavailableAction.class.php.tmpl" tofile="${app.dir}/modules/${module.unavailable}/actions/${unavailable.actionPath}Action.class.php" overwrite="false">
			<filterchain>
				<replacetokens begintoken="%%" endtoken="%%">
					<token key="MODULE" value="${module.unavailable}"/>
					<token key="ACTION_NAME" value="${unavailable.actionName}"/>
				</replacetokens>
			</filterchain>
		</copy>

		<!-- Unavailable view-->
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true" />
		<available file="${templates.dir}/defaults/views/UnavailableSuccessView.class.php.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/defaults/views/UnavailableSuccessView.class.php.tmpl" tofile="${app.dir}/modules/${module.unavailable}/views/${unavailable.actionPath}SuccessView.class.php" overwrite="false">
			<filterchain>
				<replacetokens begintoken="%%" endtoken="%%">
					<token key="MODULE" value="${module.unavailable}"/>
					<token key="ACTION_NAME" value="${unavailable.actionName}"/>
					<token key="ACTION_PATH" value="${unavailable.actionPath}"/>
				</replacetokens>
			</filterchain>
		</copy>

		<!-- Unavailable template -->
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true" />
		<available file="${templates.dir}/defaults/templates/UnavailableSuccess${template.extension}.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/defaults/templates/UnavailableSuccess${template.extension}.tmpl" tofile="${app.dir}/modules/${module.unavailable}/templates/${unavailable.actionPath}Success${template.extension}" overwrite="false" />

<!-- settings.xml -->
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true" />
		<available file="${templates.dir}/config/settings.xml.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<copy file="${templates.dir.current}/config/settings.xml.tmpl" tofile="${app.dir}/config/settings.xml" overwrite="false">
			<filterchain>
				<replacetokens begintoken="%%" endtoken="%%">
					<token key="DEFAULT_MODULE" value="${module.default}"/>
					<token key="DEFAULT_ACTION" value="${action.default}"/>
					<token key="404_MODULE" value="${module.404}"/>
					<token key="404_ACTION" value="${action.404}"/>
					<token key="LOGIN_MODULE" value="${module.login}"/>
					<token key="LOGIN_ACTION" value="${action.login}"/>
					<token key="SECURE_MODULE" value="${module.secure}"/>
					<token key="SECURE_ACTION" value="${action.secure}"/>
					<token key="DISABLED_MODULE" value="${module.disabled}"/>
					<token key="DISABLED_ACTION" value="${action.disabled}"/>
					<token key="UNAVAILABLE_MODULE" value="${module.unavailable}"/>
					<token key="UNAVAILABLE_ACTION" value="${action.unavailable}"/>
				</replacetokens>
			</filterchain>
		</copy>


	</target>

	<target name="old.buildaction">
		<subActionName/>
		<property name="templates.dir.current" value="${templates.dir.default}"  override="true" />
		<available file="${templates.dir}/Action.class.php.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<available file="${templates.dir}/modules/${module}/Action.class.php.tmpl" property="templates.dir.current" value="${templates.dir}/modules/${module}" />
		<copy file="${templates.dir.current}/Action.class.php.tmpl" tofile="${module.dir}/actions/${actionPath}Action.class.php">
			<filterchain>
				<replacetokens begintoken="%%" endtoken="%%">
					<token key="MODULE" value="${module}"/>
					<token key="ACTION" value="${action}"/>
					<token key="ACTION_NAME" value="${actionName}"/>
					<token key="ACTION_PATH" value="${actionPath}"/>
					<token key="ACTION_DIR" value="${actionDir}"/>
					<token key="ACTION_FILE" value="${actionFile}"/>
				</replacetokens>
			</filterchain>
		</copy>

		<!-- <phingcall target="buildactiontests"> -->
		<!-- 	<property name="moduletests.dir" value="${tests.dir}/modules/${module}"/> -->
		<!-- </phingcall> -->
		<input propertyname="views" promptChar="?" defaultValue="Success,Error" message="Views for ${actionPath} (no whitespace, comma seperated)"/>
		<foreach list="${views}" param="view" target="buildview"/>
	</target>

	<!-- <target name="buildactiontests"> -->
	<!-- 	<available file="${moduletests.dir}" type="dir" property="has_actiontests" value="true"/> -->
	<!-- 	<fail unless="has_actiontests" message="Could not find action tests directory: ${moduletests.dir}"/> -->
	<!-- 	<mkdir dir="${moduletests.dir}/actions"/> -->
	<!--  -->
	<!-- 	<property name="templates.dir.current" value="${templates.dir.default}" override="true" /> -->
	<!-- 	<available file="${templates.dir}/ActionTest.class.php.tmpl" property="templates.dir.current" value="${templates.dir}" /> -->
	<!-- 	<available file="${templates.dir}/modules/${module}/ActionTest.class.php.tmpl" property="templates.dir.current" value="${templates.dir}/modules/${module}" /> -->
	<!-- 	<copy file="${templates.dir.current}/ActionTest.class.php.tmpl" tofile="${moduletests.dir}/actions/${actionPath}ActionTest.class.php" overwrite="false"> -->
	<!-- 		<filterchain> -->
	<!-- 			<replacetokens begintoken="%%" endtoken="%%"> -->
	<!-- 				<token key="MODULE" value="${module}"/> -->
	<!-- 				<token key="ACTION" value="${action}"/> -->
	<!-- 				<token key="ACTION_NAME" value="${actionName}"/> -->
	<!-- 				<token key="ACTION_PATH" value="${actionPath}"/> -->
	<!-- 				<token key="ACTION_DIR" value="${actionDir}"/> -->
	<!-- 				<token key="ACTION_FILE" value="${actionFile}"/> -->
	<!-- 			</replacetokens> -->
	<!-- 		</filterchain> -->
	<!-- 	</copy> -->
	<!-- </target> -->

	<!-- View creation -->
	<target name="old.buildview">
		<property name="templates.dir.current" value="${templates.dir.default}" override="true" />
		<available file="${templates.dir}/View.class.php.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<available file="${templates.dir}/modules/${module}/View.class.php.tmpl" property="templates.dir.current" value="${templates.dir}/modules/${module}" />
		<copy file="${templates.dir.current}/View.class.php.tmpl" tofile="${module.dir}/views/${actionPath}${view}View.class.php">
			<filterchain>
				<replacetokens begintoken="%%" endtoken="%%">
					<token key="MODULE" value="${module}"/>
					<token key="ACTION" value="${action}"/>
					<token key="ACTION_NAME" value="${actionName}"/>
					<token key="ACTION_PATH" value="${actionPath}"/>
					<token key="ACTION_DIR" value="${actionDir}"/>
					<token key="ACTION_FILE" value="${actionFile}"/>
					<token key="VIEW" value="${view}"/>
				</replacetokens>
			</filterchain>
		</copy>
		<property name="templates.dir.current" value="${templates.dir.default}" override="true" />
		<available file="${templates.dir}/Template${template.extension}.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<available file="${templates.dir}/modules/${module}/Template${template.extension}.tmpl" property="templates.dir.current" value="${templates.dir}/modules/${module}" />
		<copy file="${templates.dir.current}/Template${template.extension}.tmpl" tofile="${module.dir}/templates/${actionPath}${view}${template.extension}">
			<filterchain>
				<replacetokens begintoken="%%" endtoken="%%">
					<token key="MODULE" value="${module}"/>
					<token key="ACTION" value="${action}"/>
					<token key="ACTION_NAME" value="${actionName}"/>
					<token key="ACTION_PATH" value="${actionPath}"/>
					<token key="ACTION_DIR" value="${actionDir}"/>
					<token key="ACTION_FILE" value="${actionFile}"/>
					<token key="VIEW" value="${view}"/>
				</replacetokens>
			</filterchain>
		</copy>
		<!-- <phingcall target="buildviewtests"> -->
		<!-- 	<property name="moduletests.dir" value="${tests.dir}/modules/${module}"/> -->
		<!-- </phingcall> -->
	</target>

	<!-- <target name="buildviewtests"> -->
	<!-- 	<mkdir dir="${moduletests.dir}/views"/> -->
	<!-- 	<available file="${moduletests.dir}/views" type="dir" property="has_viewtests" value="true"/> -->
	<!-- 	<fail unless="has_viewtests" message="Could not find view tests directory."/> -->
	<!--  -->
	<!-- 	<property name="templates.dir.current" value="${templates.dir.default}" override="true" /> -->
	<!-- 	<available file="${templates.dir}/ViewTest.class.php.tmpl" property="templates.dir.current" value="${templates.dir}" /> -->
	<!-- 	<available file="${templates.dir}/modules/${module}/ViewTest.class.php.tmpl" property="templates.dir.current" value="${templates.dir}/modules/${module}" /> -->
	<!-- 	<copy file="${templates.dir.current}/ViewTest.class.php.tmpl" tofile="${moduletests.dir}/views/${actionPath}${view}ViewTest.class.php" overwrite="false"> -->
	<!-- 		<filterchain> -->
	<!-- 			<replacetokens begintoken="%%" endtoken="%%"> -->
	<!-- 				<token key="MODULE" value="${module}"/> -->
	<!-- 				<token key="ACTION" value="${action}"/> -->
	<!-- 				<token key="ACTION_NAME" value="${actionName}"/> -->
	<!-- 				<token key="ACTION_PATH" value="${actionPath}"/> -->
	<!-- 				<token key="ACTION_DIR" value="${actionDir}"/> -->
	<!-- 				<token key="ACTION_FILE" value="${actionFile}"/> -->
	<!-- 				<token key="VIEW" value="${view}"/> -->
	<!-- 			</replacetokens> -->
	<!-- 		</filterchain> -->
	<!-- 	</copy> -->
	<!-- </target> -->

	<!-- Model creation -->
	<target name="old.model" description="create a new model">
		<fixpaths base="${project.dir}" defaultmodule="true" appdir="${app.dirname}"/>

		<listModules app="${app.dir}" property="current.modules"/>

		<input propertyname="module" promptChar="?" validArgs="${current.modules}" defaultValue="${default.module}" message="Make the model for which module? "/>
		<input propertyname="model" promptChar="?" message="Model Name"/>

		<phingcall target="buildmodel">
			<property name="module.dir" value="${app.dir}/modules/${module}"/>
		</phingcall>
		<!--
		<input propertyname="model" promptChar="?" defaultValue="${module}" message="Model Name"/>
		<phingcall target="buildmodel"/>
		-->
	</target>

	<target name="old.buildmodel">
		<property name="templates.dir.current" value="${templates.dir.default}" override="true" />
		<available file="${templates.dir}/Model.class.php.tmpl" property="templates.dir.current" value="${templates.dir}" />
		<available file="${templates.dir}/modules/${module}/Model.class.php.tmpl" property="templates.dir.current" value="${templates.dir}/modules/${module}" />
		<copy file="${templates.dir.current}/Model.class.php.tmpl" tofile="${module.dir}/models/${model}Model.class.php">
			<filterchain>
				<replacetokens begintoken="%%" endtoken="%%">
					<token key="MODULE" value="${module}"/>
					<token key="MODEL" value="${model}"/>
				</replacetokens>
			</filterchain>
		</copy>
		<!-- <phingcall target="buildmodeltests"> -->
		<!-- 	<property name="moduletests.dir" value="${tests.dir}/modules/${module}"/> -->
		<!-- </phingcall> -->
	</target>

	<!-- <target name="buildmodeltests"> -->
	<!-- 	<mkdir dir="${moduletests.dir}/models"/> -->
	<!-- 	<available file="${moduletests.dir}/models" type="dir" property="has_modeltests" value="true"/> -->
	<!-- 	<fail unless="has_modeltests" message="Could not find model tests directory. (${moduletests.dir}/models)"/> -->
	<!--  -->
	<!-- 	<property name="templates.dir.current" value="${templates.dir.default}" override="true" /> -->
	<!-- 	<available file="${templates.dir}/ModelTest.class.php.tmpl" property="templates.dir.current" value="${templates.dir}" /> -->
	<!-- 	<available file="${templates.dir}/modules/${module}/ModelTest.class.php.tmpl" property="templates.dir.current" value="${templates.dir}/modules/${module}" /> -->
	<!-- 	<copy file="${templates.dir.current}/ModelTest.class.php.tmpl" tofile="${moduletests.dir}/models/${model}ModelTest.class.php" overwrite="false"> -->
	<!-- 		<filterchain> -->
	<!-- 			<replacetokens begintoken="%%" endtoken="%%"> -->
	<!-- 				<token key="MODULE" value="${module}"/> -->
	<!-- 				<token key="MODEL" value="${model}"/> -->
	<!-- 			</replacetokens> -->
	<!-- 		</filterchain> -->
	<!-- 	</copy> -->
	<!-- </target> -->

	<!-- Fin -->

</project>
