; +----------------------------------------------------------------------------+
; | This file is part of the Agavi package.                                    |
; | Copyright (c) 2003-2005  Sean Kerr.                                        |
; |                                                                            |
; | For the full copyright and license information, please view the LICENSE    |
; | file that was distributed with this source code. You can also view the     |
; | LICENSE file online at http://www.agavi.org.                               |
; | -------------------------------------------------------------------------- |
; | SAMPLE VALIDATOR CONFIGURATION FILE                                        |
; | -------------------------------------------------------------------------- |
; | REQUEST METHODS:                                                           |
; |                                                                            |
; | The methods category notifies the validation manager of parameters that    |
; | will must be validated during specific HTTP request methods.               |
; |                                                                            |
; | Required keys:                                                             |
; |                                                                            |
; | 1. get  - A comma delimited list of parameters to validate during a GET    |
; |           request.                                                         |
; | 2. post - A comma delimited list of parameters to validate during a POST   |
; |           request.                                                         |
; | -------------------------------------------------------------------------- |
; | REGISTERING FILES/PARAMETERS:                                              |
; |                                                                            |
; | The names category allows you to register files and parameters with the    |
; | validation manager. This does not register a validator, only a name.       |
; |                                                                            |
; | Required keys:                                                             |
; |                                                                            |
; | 1. <name>.required - Registers the name with the validation manager and    |
; |                      sets its required status.                             |
; |                                                                            |
; | Optional keys:                                                             |
; |                                                                            |
; | 1. <name>.group        - A validation group name. When in a group, a       |
; |                          file or parameter is not required until input is  |
; |                          entered for another file or parameter of the same |
; |                          group.                                            |
; | 2. <name>.required_msg - Sets the error message that will be set when the  |
; |                          file or parameter has not been specified.         |
; | 3. <name>.type         - Specifies the type for this name, either file or  |
; |                          parameter. The default type is parameter.         |
; | 4. <name>.validators   - A comma delimited list of validators to execute   |
; |                          on this file or parameter.                        |
; | -------------------------------------------------------------------------- |
; | SUB-FILES/SUB-PARAMETERS                                                   |
; |                                                                            |
; | Sometimes you want to validate a file or parameter name that is a sub-key  |
; | of an array. For instance you have an input box named 'billing[address]'.  |
; | You can validate the address parameter by specifying the name as such:     |
; |                                                                            |
; | billing{address}.<key> = "value"                                           |
; |                                                                            |
; | When doing this, you also have to declare it as such inside the GET and    |
; | POST method file/parameter lists.                                          |
; | -------------------------------------------------------------------------- |
; | REGISTERING VALIDATORS:                                                    |
; |                                                                            |
; | A category name must exist for each validator you wish to use. The name    |
; | use for the category name is meaningless, but may be easier to organize if |
; | it's prefixed with the parameter name that will be using it.               |
; |                                                                            |
; | Required keys:                                                             |
; |                                                                            |
; | 1. class - The validator class name.                                       |
; |                                                                            |
; | Optional keys:                                                             |
; |                                                                            |
; | 1. file - A filesystem path to the validator class file.                   |
; |                                                                            |
; | For an example validator configuration, view samples/validators.ini.       |
; | -------------------------------------------------------------------------- |
; | PARAMETER KEYS:                                                            |
; |                                                                            |
; | Parameter keys specify a parameter name and value to be passed to the      |
; | initialization method of the class instance. Any number of parameters can  |
; | be passed.                                                                 |
; |                                                                            |
; |     param.<name> = "<value>"                                               |
; |                                                                            |
; | Parameter keys can also be used to pass an array of values instead of a    |
; | single value.                                                              |
; |                                                                            |
; |     param.<name>.1 = "<value1>"                                            |
; |     param.<name>.2 = "<value2>"                                            |
; |                                                                            |
; | For a list of available parameters for a class, browse the class source    |
; | or documentation.                                                          |
; | -------------------------------------------------------------------------- |
; | KEYWORDS:                                                                  |
; |                                                                            |
; | The following keywords may exist in file or param values:                  |
; |                                                                            |
; | 1. %MO_APP_DIR%                                                            |
; | 2. %MO_LIB_DIR%                                                            |
; | 3. %MO_MODULE_DIR%                                                         |
; | 4. %MO_WEBAPP_DIR%                                                         |
; +----------------------------------------------------------------------------+
; | WHERE DO YOU PUT YOUR CONFIGURATION?                                       |
; |                                                                            |
; | Validator configuration files must be located in the validate subdirectory |
; | of your module. Each configuration is only valid for the action it's set   |
; | for. If you have a TestAction, you'll need a Test.ini with your validator  |
; | configuration settings.                                                    |
; |                                                                            |
; | Example: modules/MyModule/actions/TestAction.class.php                     |
; |          modules/MyModule/validate/Test.ini                                |
; +----------------------------------------------------------------------------+

[methods]

    get  = ""
    post = "username, password, confirm_password, email, billing{address1},
            billing{address2}"

[names]

    username.required     = "Yes"
    username.required_msg = "Please enter your username"
    username.validators   = "UsernameValidator1, UsernameValidator2"

    password.required     = "Yes"
    password.required_msg = "Please enter your password"
    password.validators   = "PasswordValidator"

    confirm_password.required     = "Yes"
    confirm_password.required_msg = "Please confirm your password"
    confirm_password.validators   = "PasswordValidator"

    email.required     = "Yes"
    email.required_msg = "Please enter your email address"
    email.validators   = "EmailValidator"

    billing{address1}.required     = "Yes"
    billing{address1}.required_msg = "Please enter your billing address"

    billing{address2}.required = "No"

[UsernameValidator1]

    class = "StringValidator"

    param.min       = "3"
    param.min_error = "Your username must be no shorter than 3 characters in length"
    param.max       = "25"
    param.max_error = "Your username must be no longer than 25 characters in length"

[UsernameValidator2]

    class = "RegexValidator"

    param.match       = "Yes"
    param.match_error = "Please enter a proper username, mmm k?"
    param.pattern     = "/^[a-z][a-z0-9\-\._]+[a-z0-9]$/i"

[PasswordValidator]

    class = "StringValidator"

    param.min       = "8"
    param.min_error = "Your password must be no shorter than 8 characters in length"
    param.max       = "50"
    param.max_error = "Your password must be no longer than 50 characters in length"

[ConfirmPasswordValidator]

    class = "StringValidator"

    param.min       = "8"
    param.min_error = "Your confirmed password must be no shorter than 8 characters in length"
    param.max       = "50"
    param.max_error = "Your confirmed password must be no longer than 50 characters in length"

[EmailValidator]

    class = "EmailValidator"

    param.error = "Please enter a valid email address"
