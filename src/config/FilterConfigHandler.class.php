<?php

// +---------------------------------------------------------------------------+
// | This file is part of the Agavi package.                                   |
// | Copyright (c) 2003-2006 the Agavi Project.                                |
// | Based on the Mojavi3 MVC Framework, Copyright (c) 2003-2005 Sean Kerr.    |
// |                                                                           |
// | For the full copyright and license information, please view the LICENSE   |
// | file that was distributed with this source code. You can also view the    |
// | LICENSE file online at http://www.agavi.org/LICENSE.txt                   |
// |   vi: set noexpandtab:                                                    |
// |   Local Variables:                                                        |
// |   indent-tabs-mode: t                                                     |
// |   End:                                                                    |
// +---------------------------------------------------------------------------+

/**
 * AgaviFilterConfigHandler allows you to register filters with the system.
 *
 * @package    agavi
 * @subpackage config
 *
 * @author     David ZÃ¼lke <dz@bitxtender.com>
 * @copyright  (c) Authors
 * @since      0.9.0
 *
 * @version    $Id$
 */
class AgaviFilterConfigHandler extends AgaviConfigHandler
{
	protected function getItemParameters($itemNode, $oldValues = array())
	{
		$data = array();
		if($itemNode->hasChildren('parameters')) {
			foreach($itemNode->parameters as $node) {
				$data[$node->getAttribute('name')] = $this->literalize($node->getValue());
			}
		}
		$data = array_merge($oldValues, $data);
		return $data;
	}

	/**
	 * Execute this configuration handler.
	 *
	 * @param      string An absolute filesystem path to a configuration file.
	 *
	 * @return     string Data to be written to a cache file.
	 *
	 * @throws     <b>AgaviUnreadableException</b> If a requested configuration file
	 *                                             does not exist or is not readable.
	 * @throws     <b>AgaviParseException</b> If a requested configuration file is
	 *                                        improperly formatted.
	 *
	 * @author     Sean Kerr <skerr@mojavi.org>
	 * @since      0.9.0
	 */
	public function execute($config, $context = null)
	{
		// parse the config file
		$conf = AgaviConfigCache::parseConfig($config, false);

		$environment = AgaviConfig::get('core.environment');
		
		$configs = $this->orderConfigurations($conf->configurations, $environment, $context);
		
		$filters = array();
		
		foreach($configs as $cfg) {

			if($cfg->hasChildren('filters')) {
				foreach($cfg->filters as $filter) {
					$name = $filter->getAttribute('name');
					if(!isset($filters[$name]))
						$filters[$name] = array('params' => array());

					if($filter->hasChildren('class'))
						$filters[$name]['class'] = $filter->class->getValue();
					$filters[$name]['params'] = $this->getItemParameters($filter, $filters['filters'][$name]['params']);
				}
			}
		}
		
		$data = array();

		foreach($filters as $filter) {
			$data[] = '$filter = new ' . $filter['class'] . '();';
			$data[] = '$filter->initialize($this->context, ' . var_export($filter['params'], true) . ');';
			$data[] = '$filters[] = $filter;';
		}

		// compile data
		$retval = "<?php\n" .
				"// auto-generated by FilterConfigHandler\n" .
				"// date: %s\n%s\n%s\n%s\n?>";

		$retval = sprintf($retval, date('m/d/Y H:i:s'),
						  '$filters = array();',
						  implode("\n", $data),
						  '$list[$moduleName] = $filters;');

		return $retval;

	}

}

?>